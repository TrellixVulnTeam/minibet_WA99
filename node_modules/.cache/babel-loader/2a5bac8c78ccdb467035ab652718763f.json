{"remainingRequest":"/Users/anthonypena/Desktop/PORT/CODE/git/minibet/node_modules/babel-loader/lib/index.js!/Users/anthonypena/Desktop/PORT/CODE/git/minibet/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/anthonypena/Desktop/PORT/CODE/git/minibet/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/anthonypena/Desktop/PORT/CODE/git/minibet/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/anthonypena/Desktop/PORT/CODE/git/minibet/src/components/MatchCarousel.vue?vue&type=template&id=52c33876","dependencies":[{"path":"/Users/anthonypena/Desktop/PORT/CODE/git/minibet/src/components/MatchCarousel.vue","mtime":1609404524835},{"path":"/Users/anthonypena/Desktop/PORT/CODE/git/minibet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/anthonypena/Desktop/PORT/CODE/git/minibet/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/anthonypena/Desktop/PORT/CODE/git/minibet/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1607095271000},{"path":"/Users/anthonypena/Desktop/PORT/CODE/git/minibet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/anthonypena/Desktop/PORT/CODE/git/minibet/node_modules/vue-loader-v16/dist/index.js","mtime":1607095271000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgcmVzb2x2ZUNvbXBvbmVudCBhcyBfcmVzb2x2ZUNvbXBvbmVudCwgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCByZW5kZXJMaXN0IGFzIF9yZW5kZXJMaXN0LCBGcmFnbWVudCBhcyBfRnJhZ21lbnQsIG9wZW5CbG9jayBhcyBfb3BlbkJsb2NrLCBjcmVhdGVCbG9jayBhcyBfY3JlYXRlQmxvY2sgfSBmcm9tICJ2dWUiOwp2YXIgX2hvaXN0ZWRfMSA9IHsKICBjbGFzczogIm1hdGNoQ2Fyb3VzZWwtd3JhcCIsCiAgc3R5bGU6IHsKICAgICJtYXJnaW4tdG9wIjogIjJyZW0iCiAgfQp9Owp2YXIgX2hvaXN0ZWRfMiA9IHsKICBjbGFzczogIm1hdGNoQ2Fyb3VzZWwtY29udGVudC13cmFwIiwKICBzdHlsZTogewogICAgIm1hcmdpbi10b3AiOiAiMXJlbSIKICB9Cn07CmV4cG9ydCBmdW5jdGlvbiByZW5kZXIoX2N0eCwgX2NhY2hlLCAkcHJvcHMsICRzZXR1cCwgJGRhdGEsICRvcHRpb25zKSB7CiAgdmFyIF9jb21wb25lbnRfc2VnbWVudF9oZWFkaW5nID0gX3Jlc29sdmVDb21wb25lbnQoInNlZ21lbnRfaGVhZGluZyIpOwoKICB2YXIgX2NvbXBvbmVudF9tYXRjaF9pdGVtID0gX3Jlc29sdmVDb21wb25lbnQoIm1hdGNoX2l0ZW0iKTsKCiAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKCJkaXYiLCBfaG9pc3RlZF8xLCBbX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfc2VnbWVudF9oZWFkaW5nLCB7CiAgICBvblNlZU1vcmVDbGlja2VkRXZlbnQ6ICRvcHRpb25zLmFkZE1vcmVNYXRjaGVzLAogICAgcHJvcF9jYWxsZXI6ICRkYXRhLm1hdGNoSGVhZGluZy5jYWxsZXIsCiAgICBwcm9wX2hlYWRpbmc6ICRkYXRhLm1hdGNoSGVhZGluZy5oZWFkaW5nLAogICAgcHJvcF9jdGE6ICRkYXRhLm1hdGNoSGVhZGluZy5jdGEKICB9LCBudWxsLCA4CiAgLyogUFJPUFMgKi8KICAsIFsib25TZWVNb3JlQ2xpY2tlZEV2ZW50IiwgInByb3BfY2FsbGVyIiwgInByb3BfaGVhZGluZyIsICJwcm9wX2N0YSJdKSwgX2NyZWF0ZVZOb2RlKCJkaXYiLCBfaG9pc3RlZF8yLCBbKF9vcGVuQmxvY2sodHJ1ZSksIF9jcmVhdGVCbG9jayhfRnJhZ21lbnQsIG51bGwsIF9yZW5kZXJMaXN0KCRkYXRhLm1hdGNoSXRlbXMsIGZ1bmN0aW9uIChpdGVtKSB7CiAgICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soX2NvbXBvbmVudF9tYXRjaF9pdGVtLCB7CiAgICAgIGtleTogaXRlbS5pZCwKICAgICAgcHJvcF9NYXRjaEl0ZW1zOiBpdGVtCiAgICB9LCBudWxsLCA4CiAgICAvKiBQUk9QUyAqLwogICAgLCBbInByb3BfTWF0Y2hJdGVtcyJdKTsKICB9KSwgMTI4CiAgLyogS0VZRURfRlJBR01FTlQgKi8KICApKV0pXSk7Cn0="},{"version":3,"sources":["/Users/anthonypena/Desktop/PORT/CODE/git/minibet/src/components/MatchCarousel.vue"],"names":[],"mappings":";;AAuBK,EAAA,KAAK,EAAC,oB;AAAqB,EAAA,KAAwB,EAAxB;AAAA,kBAAA;AAAA;;;AAEvB,EAAA,KAAK,EAAC,4B;AAA6B,EAAA,KAAwB,EAAxB;AAAA,kBAAA;AAAA;;;;;;;uBAF5C,YAAA,CAKM,KALN,EAAA,UAAA,EAKM,CAJF,YAAA,CAA8J,0BAA9J,EAA8J;AAA5I,IAAA,qBAAmB,EAAE,QAAA,CAAA,cAAuH;AAAtG,IAAA,WAAW,EAAE,KAAA,CAAA,YAAA,CAAa,MAA4E;AAAnE,IAAA,YAAY,EAAE,KAAA,CAAA,YAAA,CAAa,OAAwC;AAA9B,IAAA,QAAQ,EAAE,KAAA,CAAA,YAAA,CAAa;AAAO,GAA9J,E,IAAA,E;;AAAA,I,oEAAA,CAIE,EAHF,YAAA,CAEM,KAFN,EAAA,UAAA,EAEM,E,kBADF,YAAA,CAAgF,SAAhF,EAAgF,IAAhF,EAAgF,WAAA,CAArD,KAAA,CAAA,UAAqD,EAA3C,UAAlB,IAAkB,EAAd;yBAAvB,YAAA,CAAgF,qBAAhF,EAAgF;AAAxC,MAAA,GAAG,EAAE,IAAI,CAAC,EAA8B;AAAzB,MAAA,eAAe,EAAE;AAAQ,KAAhF,E,IAAA,E;;AAAA,M,mBAAA,C;GAAgF,CAAhF,E;;AAAA,GACE,EAFN,CAGE,CALN,C","sourcesContent":["<style>\n\n.matchCarousel-wrap {\n    display: flex;\n    flex-direction: column;\n    white-space: nowrap;\n}\n\n.matchCarousel-content-wrap {\n    display: flex;\n    flex-direction: row;\n    align-items: stretch;\n    justify-content: left;\n    overflow: scroll;\n    padding: 0rem 1.5rem 0rem 1.5rem;\n}\n\n@media only screen and (min-width: 800px) {}\n\n</style>\n\n<template>\n\n<div class=\"matchCarousel-wrap\" style=\"margin-top: 2rem\">\n    <segment_heading @seeMoreClickedEvent=\"addMoreMatches\" :prop_caller=\"matchHeading.caller\" :prop_heading=\"matchHeading.heading\" :prop_cta=\"matchHeading.cta\" />\n    <div class=\"matchCarousel-content-wrap\" style=\"margin-top: 1rem\">\n        <match_item v-for=\"item in matchItems\" :key=\"item.id\" :prop_MatchItems=\"item\" />\n    </div>\n</div>\n\n</template>\n\n<script>\n\nimport segment_heading from './common/segment_heading.vue'\nimport match_item from './MatchCarousel/item.vue'\nexport default {\n    name: 'MatchCarousel',\n    data() { // variable declarations\n        return {\n            matchHeading: {\n                heading: \"Favoured Matches\",\n                cta: \"See More\",\n                caller: this.$options.name // returns app name\n            },\n            matchItems: [],\n            matchProperties : {\n              teams : [\"Arsenal\",\"Bolton\",\"Chelsea\",\"Liverpool\",\"Wigan Warriors\",\"Tottenham Hotspurs\",\"Manchester City\",\"Manchester United\"],\n              status : [\"up\",\"down\"]\n            }\n        }\n    },\n    components: {\n        match_item,\n        segment_heading\n    },\n    methods: {\n        addMoreMatches() {\n            var subject = this.matchProperties\n            this.matchItems.unshift({\n                id: this.matchItems.length + 1,\n                betTypeCount: this.randomize(50),\n                teamA: subject.teams[this.getRivalIndex()[0]],\n                teamB: subject.teams[this.getRivalIndex()[1]],\n                status: subject.status[this.randomize(subject.status.length)]\n            })\n        },\n        randomize(limit){\n          return Math.floor(Math.random()*limit)\n        },\n        getRivalIndex(){\n          var teamIndex = []\n          teamIndex.push(this.randomize(this.matchProperties.teams.length))\n          var i\n          var x\n          for (i = 0; i < this.matchProperties.teams.length; i++) {\n            x = this.randomize(this.matchProperties.teams.length)\n            if (x!=teamIndex[0]){\n              teamIndex.push(x)\n              break\n            }\n            //console.log(\"x = \"+x)\n          }\n          //console.log(teamIndex)\n          return teamIndex\n        }\n    },\n    mounted() { //onLoad event\n      var i = 0;\n      for (i = 0; i < 10; i++) {\n        this.addMoreMatches()\n      }\n    }\n}\n\n</script>\n"],"sourceRoot":""}]}